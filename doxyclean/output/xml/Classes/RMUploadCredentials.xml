<?xml version="1.0" encoding="UTF-8"?><object kind="class">
  <name>RMUploadCredentials</name>
  <file>RMUploadCredentials.h</file>
  <superclass/>
  <conformsTo>
    <protocol>
      <name> <ref id="../Protocols/AFPropertyList">AFPropertyList</ref> </name>
      <conformsTo/>
    </protocol>
  </conformsTo>
  <description>
    <brief>
<para>Represents a set of user credentials, most commonly for an account on a web service. </para>    </brief>
    <details>
    </details>
  </description>
  <sections>
    <section>
      <name>Other</name>
      <member kind="property">
        <name>plugin</name>
        <type><ref id="../Classes/RMUploadPlugin">RMUploadPlugin</ref> *</type>
        <prototype>@property <ref id="../Classes/RMUploadPlugin">RMUploadPlugin</ref> *plugin</prototype>
        <file><ref id="../Classes/RMUploadCredentials">RMUploadCredentials</ref>.h</file>
        <description>
          <brief>
<para>The plugin that the account belongs to. This is a to-one relationship. </para>        </brief>
          <details>
        </details>
        </description>
      </member>
      <member kind="property">
        <name>userIdentifier</name>
        <type><ref id="http://developer.apple.com/mac/library/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/index">NSString</ref> *</type>
        <prototype>@property <ref id="http://developer.apple.com/mac/library/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/index">NSString</ref> *userIdentifier</prototype>
        <file><ref id="../Classes/RMUploadCredentials">RMUploadCredentials</ref>.h</file>
        <description>
          <brief>
<para>Overriding this is required, an exception will be thrown if not implemented by your subclass. This should be a string which is meaningful to the user, suitable for showing them as a later authentication choice. </para>        </brief>
          <details>
<para>You should use their username or email address, depending on how they login. Avoid using their name, the user may have more than one account on your web service. </para>        </details>
        </description>
      </member>
    </section>
    <section>
      <name>Other</name>
      <member kind="instance-method">
        <name>initWithPropertyListRepresentation:</name>
        <type>id</type>
        <prototype>- (id)initWithPropertyListRepresentation:(id)<parameter>values</parameter> </prototype>
        <file><ref id="../Classes/RMUploadCredentials">RMUploadCredentials</ref>.h</file>
        <description>
          <brief>
<para>Initialise credentials from a serialised representation. </para>        </brief>
          <details>
<para>We provide you with the representation that you return in <code>propertyListRepresentation</code> to hand off to the framework for saving.</para><para>If you follow the <code>propertyListRepresentation</code> example implementation, be sure to pass only the superclass representation to the superclass inititializer.</para><para>An example implementation would be: <codeblock>- (id)initWithPropertyListRepresentation:(id)values {

        id superRepresentation = [values objectForKey:@&quot;super&quot;];



        self = [super initWithPropertyListRepresentation:superRepresentation];

        if (self == nil) return nil;

        

        [self setProperty:[values objectForKey:@&quot;myKey&quot;]];

        

        return self;

}

</codeblock></para><para>
</para>        </details>
        </description>
        <parameters><param><name>
values
</name><description>
<para>The property list representation that was returned from <code>propertyListRepresentation</code>. </para></description></param>
</parameters>
      </member>
      <member kind="instance-method">
        <name>propertyListRepresentation</name>
        <type>id</type>
        <prototype>- (id)propertyListRepresentation</prototype>
        <file><ref id="../Classes/RMUploadCredentials">RMUploadCredentials</ref>.h</file>
        <description>
          <brief>
<para>A representation of the instance that can be saved to a plist. </para>        </brief>
          <details>
<para>In order to save accounts they will be turned into a plist, therefore here you need to return a representation of your object that can be saved safely into one. You must also call the super's implementation at the top of the method.</para><para>It is essential that you include, and namespace the representation of the superclass. You must not assume the class of the superclass' representation, simply that it is suitable for inclusion in a property list written to disk.</para><para>An example implementation would be: <codeblock>- (id)propertyListRepresentation {

        id superRepresentation = [super propertyListRepresentation];



        NSMutableDictionary *propertyListRepresentation = [<ref id="http://developer.apple.com/mac/library/documentation/Cocoa/Reference/Foundation/Classes/NSMutableDictionary_Class/index">NSMutableDictionary</ref> dictionary];

        [propertyListRepresentation setObject:superRepresentation forKey:@&quot;super&quot;];



        [propertyListRepresentation setValue:[self property] forKey:@&quot;myKey&quot;];



        return propertyListRepresentation;

}

</codeblock> </para>        </details>
        </description>
      </member>
    </section>
  </sections>
</object>